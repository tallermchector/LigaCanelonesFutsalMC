// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Team {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  slug    String  @unique
  logoUrl String?

  players Player[]

  matchesA Match[] @relation("TeamAMatches")
  matchesB Match[] @relation("TeamBMatches")

  seasonStats SeasonTeam[]

  gameEvents GameEvent[]
}

model Player {
  id          Int       @id @default(autoincrement())
  name        String
  number      Int
  position    String?
  birthDate   DateTime?
  height      Int? // en cm
  weight      Int? // en kg
  nationality String?

  team   Team @relation(fields: [teamId], references: [id])
  teamId Int

  gameEvents GameEvent[]
  matchStats PlayerMatchStats[]
}

model Match {
  id            Int      @id @default(autoincrement())
  teamAId       Int
  teamBId       Int
  scheduledTime DateTime
  status        String
  scoreA        Int
  scoreB        Int
  round         Int?
  period        Int
  time          Int
  isRunning     Boolean

  teamA Team @relation("TeamAMatches", fields: [teamAId], references: [id])
  teamB Team @relation("TeamBMatches", fields: [teamBId], references: [id])

  foulsA    Int
  foulsB    Int
  timeoutsA Int
  timeoutsB Int

  activePlayersA Int[]
  activePlayersB Int[]

  events           GameEvent[]
  playerMatchStats PlayerMatchStats[]

  @@index([teamAId])
  @@index([teamBId])
}

model GameEvent {
  id           Int     @id @default(autoincrement())
  type         String
  match        Match   @relation(fields: [matchId], references: [id])
  matchId      Int
  playerId     Int?
  timestamp    Int
  teamName     String?
  playerName   String?
  playerInId   Int?
  playerInName String?

  // --- CORRECCIÓN APLICADA AQUÍ ---
  // Se unificó la relación en un solo campo 'teamId' de tipo Int?
  team   Team? @relation(fields: [teamId], references: [id])
  teamId Int?

  player Player? @relation(fields: [playerId], references: [id])
}

model PlayerMatchStats {
  id                  Int @id @default(autoincrement())
  matchId             Int
  playerId            Int
  timePlayedInSeconds Int

  match  Match  @relation(fields: [matchId], references: [id])
  player Player @relation(fields: [playerId], references: [id])

  @@unique([matchId, playerId])
}

model Season {
  id    Int          @id @default(autoincrement())
  name  String
  year  Int
  teams SeasonTeam[]
}

model SeasonTeam {
  id           Int @id @default(autoincrement())
  seasonId     Int
  teamId       Int
  position     Int
  played       Int
  won          Int
  drawn        Int
  lost         Int
  goalsFor     Int
  goalsAgainst Int
  points       Int

  season Season @relation(fields: [seasonId], references: [id])
  team   Team   @relation(fields: [teamId], references: [id])

  @@unique([seasonId, teamId])
}
