// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Team {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  logoUrl   String?
  slug      String   @unique
  players   Player[]
  matchesA  Match[]  @relation("TeamAMatches")
  matchesB  Match[]  @relation("TeamBMatches")
  seasonTeams SeasonTeam[]
}

model Player {
  id          Int      @id @default(autoinvert())
  name        String
  number      Int
  position    String?
  birthDate   DateTime?
  height      Int?
  weight      Int?
  nationality String?
  teamId      Int
  team        Team     @relation(fields: [teamId], references: [id])
  stats       PlayerMatchStats[]
}

model Match {
  id               Int      @id @default(autoinvert())
  teamAId          Int
  teamBId          Int
  scheduledTime    DateTime
  status           String
  scoreA           Int
  scoreB           Int
  round            Int?
  period           Int
  time             Int
  isRunning        Boolean
  foulsA           Int
  foulsB           Int
  timeoutsA        Int
  timeoutsB        Int
  activePlayersA   Int[]
  activePlayersB   Int[]
  events           GameEvent[]
  playerMatchStats PlayerMatchStats[]

  teamA Team @relation("TeamAMatches", fields: [teamAId], references: [id])
  teamB Team @relation("TeamBMatches", fields: [teamBId], references: [id])
}

model GameEvent {
  id           String      @id @default(cuid())
  matchId      Int
  type         String
  timestamp    Int
  teamId       String?
  teamName     String?
  playerId     Int?
  playerName   String?
  playerInId   Int?
  playerInName String?
  match        Match    @relation(fields: [matchId], references: [id])
}

model PlayerMatchStats {
  id                  Int @id @default(autoinvert())
  matchId             Int
  playerId            Int
  timePlayedInSeconds Int @default(0)
  match               Match @relation(fields: [matchId], references: [id])
  player              Player @relation(fields: [playerId], references: [id])
  @@unique([matchId, playerId])
}

model Season {
  id    Int      @id @default(autoinvert())
  name  String
  year  Int
  teams SeasonTeam[]
}

model SeasonTeam {
  seasonId      Int
  teamId        Int
  position      Int
  points        Int
  gamesPlayed   Int
  wins          Int
  draws         Int
  losses        Int
  goalsFor      Int
  goalsAgainst  Int
  goalDifference Int
  
  season Season @relation(fields: [seasonId], references: [id])
  team   Team   @relation(fields: [teamId], references: [id])
  
  @@id([seasonId, teamId])
}
