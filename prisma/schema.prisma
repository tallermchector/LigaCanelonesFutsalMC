// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Team {
  id      Int      @id @default(autoincrement())
  name    String
  logoUrl String?
  players Player[]
  teamA   Match[]  @relation("TeamAMatches")
  teamB   Match[]  @relation("TeamBMatches")
}

model Player {
  id              Int                @id @default(autoincrement())
  name            String
  number          Int
  position        String
  teamId          Int
  team            Team               @relation(fields: [teamId], references: [id])
  events          GameEvent[]
  playerMatchStats PlayerMatchStats[]

  @@index([teamId])
}

model Match {
  id              Int                @id @default(autoincrement())
  scheduledTime   DateTime
  status          String             @default("SCHEDULED")
  teamAId         Int
  teamBId         Int
  teamA           Team               @relation("TeamAMatches", fields: [teamAId], references: [id])
  teamB           Team               @relation("TeamBMatches", fields: [teamBId], references: [id])
  scoreA          Int                @default(0)
  scoreB          Int                @default(0)
  foulsA          Int                @default(0)
  foulsB          Int                @default(0)
  timeoutsA       Int                @default(1)
  timeoutsB       Int                @default(1)
  period          Int                @default(1)
  time            Int                @default(1200) // in seconds
  isRunning       Boolean            @default(false)
  round           Int
  events          GameEvent[]
  activePlayersA  Int[]
  activePlayersB  Int[]
  playerMatchStats PlayerMatchStats[]

  @@index([teamAId])
  @@index([teamBId])
}

model GameEvent {
  id           String @id @default(cuid())
  matchId      Int
  match        Match  @relation(fields: [matchId], references: [id])
  type         String
  teamId       String
  playerId     Int?
  player       Player? @relation(fields: [playerId], references: [id])
  playerName   String?
  playerInId   Int?
  playerInName String?
  teamName     String
  timestamp    Int

  @@index([matchId])
  @@index([playerId])
}

model PlayerMatchStats {
  id                Int    @id @default(autoincrement())
  matchId           Int
  match             Match  @relation(fields: [matchId], references: [id])
  playerId          Int
  player            Player @relation(fields: [playerId], references: [id])
  timePlayedInSeconds Int    @default(0)

  @@unique([matchId, playerId])
  @@index([matchId])
  @@index([playerId])
}