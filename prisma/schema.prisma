// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Team {
  id      Int      @id @default(autoincrement())
  name    String
  logoUrl String?
  slug    String   @unique
  players Player[]

  matchesA Match[] @relation("TeamAMatches")
  matchesB Match[] @relation("TeamBMatches")

  seasonTeams SeasonTeam[]

  gameEvents GameEvent[]
}

model Player {
  id          Int                @id @default(autoincrement())
  name        String
  number      Int
  position    String?
  birthDate   DateTime?
  height      Int? // in cm
  weight      Int? // in kg
  nationality String?
  teamId      Int
  team        Team               @relation(fields: [teamId], references: [id])
  events      GameEvent[]
  matchStats  PlayerMatchStats[]
}

model Match {
  id               Int                @id @default(autoincrement())
  teamAId          Int
  teamBId          Int
  scheduledTime    DateTime
  status           String
  scoreA           Int
  scoreB           Int
  round            Int?
  period           Int
  foulsA           Int
  foulsB           Int
  timeoutsA        Int
  timeoutsB        Int
  isRunning        Boolean
  activePlayersA   Int[]
  activePlayersB   Int[]
  teamA            Team               @relation("TeamAMatches", fields: [teamAId], references: [id])
  teamB            Team               @relation("TeamBMatches", fields: [teamBId], references: [id])
  events           GameEvent[]
  playerMatchStats PlayerMatchStats[]
}

model GameEvent {
  id           String     @id @default(cuid())
  type         String
  matchId      Int
  teamId       String?
  playerId     Int?
  timestamp    Int
  teamName     String?
  playerName   String?
  playerInId   Int?
  playerInName String?
  match        Match      @relation(fields: [matchId], references: [id])
  player       Player?    @relation(fields: [playerId], references: [id])
}

model PlayerMatchStats {
  id                  Int    @id @default(autoincrement())
  matchId             Int
  playerId            Int
  timePlayedInSeconds Int
  match               Match  @relation(fields: [matchId], references: [id])
  player              Player @relation(fields: [playerId], references: [id])

  @@unique([matchId, playerId])
}

model Season {
  id    Int          @id @default(autoincrement())
  name  String
  year  Int
  teams SeasonTeam[]
}

model SeasonTeam {
  seasonId  Int
  teamId    Int
  position  Int
  points    Int
  played    Int
  won       Int
  drawn     Int
  lost      Int
  goalsFor  Int
  goalsAg   Int
  goalDiff  Int
  season    Season @relation(fields: [seasonId], references: [id])
  team      Team   @relation(fields: [teamId], references: [id])

  @@id([seasonId, teamId])
}
