// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id      Int      @id @default(autoincrement())
  name    String
  slug    String   @unique
  logoUrl String?
  players Player[]
  teamA   Match[]  @relation("TeamA")
  teamB   Match[]  @relation("TeamB")
  // Temporada
  seasons SeasonTeam[]
  GameEvent GameEvent[]
}

model Player {
  id                  Int                @id @default(autoincrement())
  name                String
  number              Int
  position            String?
  birthDate           DateTime?
  height              Int? // en cm
  weight              Int? // en kg
  nationality         String?
  teamId              Int
  team                Team               @relation(fields: [teamId], references: [id])
  gameEvents          GameEvent[]
  playerMatchStats    PlayerMatchStats[]

  @@index([teamId])
}

model Match {
  id               Int                @id @default(autoincrement())
  teamAId          Int
  teamBId          Int
  scheduledTime    DateTime
  status           String
  scoreA           Int
  scoreB           Int
  round            Int?
  period           Int
  time             Int
  isRunning        Boolean
  foulsA           Int
  foulsB           Int
  timeoutsA        Int
  timeoutsB        Int
  activePlayersA   Int[]
  activePlayersB   Int[]
  teamA            Team               @relation("TeamA", fields: [teamAId], references: [id])
  teamB            Team               @relation("TeamB", fields: [teamBId], references: [id])
  events           GameEvent[]
  playerMatchStats PlayerMatchStats[]

  @@index([teamAId])
  @@index([teamBId])
}

model GameEvent {
  id           String    @id @default(cuid())
  matchId      Int
  type         String
  timestamp    Int
  teamId       Int?
  playerId     Int?
  playerName   String?
  teamName     String?
  playerInId   Int?
  playerInName String?
  match        Match   @relation(fields: [matchId], references: [id])
  player       Player? @relation(fields: [playerId], references: [id])
  Team         Team?   @relation(fields: [teamId], references: [id])
}

model PlayerMatchStats {
  id                  Int    @id @default(autoincrement())
  matchId             Int
  playerId            Int
  timePlayedInSeconds Int    @default(0)
  match               Match  @relation(fields: [matchId], references: [id])
  player              Player @relation(fields: [playerId], references: [id])

  @@unique([matchId, playerId])
}

model Season {
  id    Int          @id @default(autoincrement())
  name  String
  year  Int
  teams SeasonTeam[]
}

model SeasonTeam {
  seasonId  Int
  teamId    Int
  position  Int
  season    Season @relation(fields: [seasonId], references: [id])
  team      Team   @relation(fields: [teamId], references: [id])

  @@id([seasonId, teamId])
}
